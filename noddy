<?php
$action = "";
$fields = "";

if (isset($argv[1])) {
    $action = $argv[1];
}
if (isset($argv[2])) {
    $entity = ucwords(rtrim($argv[2], "s"));
    $plural = strtolower(rtrim($argv[2], "s")) . 's';
}

if (isset($argv[3])) {
    if(substr($argv[3], 0, 9) == "--fields="){
        $list = substr($argv[3], 9);
        $fields = explode(",",$list);
    }
}



if(!$action) {
 echo "Invalid parameter";
}
else
{

    switch ($action) {
        case "view":
            view($plural,$fields);
            autoload();
            break;
        case "controller":
            controller($entity, $plural);
            autoload();
            break;
        case "route":
            route($entity, $plural);
            autoload();
            break;
        case "model":
            model($entity);
            autoload();
            break;
        case "table":
            table($plural,$fields);
            autoload();
            break;
        case "resource":
            view($plural,$fields);
            controller($entity, $plural);
            model($entity);
            route($entity, $plural);
            table($plural,$fields);
            autoload();
            break;
    }
}
function view($plural,$fields)
{
    $types = array("index" , "show" , "edit" , "create");
    $dir = "views/$plural";
    mkdir($dir, 0777, true);

    foreach($types as $type) {
        $filename = "$type.mustache";
        $data = "<h1>$plural $type </h1>";
        if($type == "create" && $fields)
        {
            $inputs = "";
            foreach($fields as $field){
                $inputs = $inputs . '<input name="'. $field . '" />
                ';
            }
            $data = $data . '
            <form action="$' . $plural . '" method = "POST">
                '. $inputs .'
            </form>';
        }
        if($type == "index" && $fields)
        {
$data = '<table>
    <tr>';

        foreach($fields as $field)
        {
            $data = $data . '
        <th>' . $field . '</th>';
        }
            $data = $data . '
    </tr>
    <tr>';
        foreach($fields as $field)
            {
                $data = $data . '
        <td>{{' . $field . '}}</td>';
            }
            $data = $data . '
    </tr>
</table>';

        }
        file_put_contents($dir . "/" . $filename, $data);
    }
}

function controller($entity, $plural )
{
    $dir = "App/controllers";
    $filename = $entity. 'Controller.php';
    $data = '<?php

namespace App;

class ' . $entity .'Controller extends BaseController{

    public function __construct(){
        $this::init("' . $plural .'");
        $this->auth = new Auth();
    }

    public function index(){
        $this->auth->authorize();
        $' . $plural . ' = ' . $entity .'::all()->toArray();
        return $this->m->render("index", $' . $plural .');

    }

    public function show($id)
    {
        $this->auth->authorize();
        $' . strtolower($entity) . ' = ' . $entity .'::find($id)->toArray();
        return $this->m->render("show", $' . strtolower($entity) .');
    }

    public function create()
    {
        return $this->m->render("create");
    }

    public function store($array)
    {
        $'. strtolower($entity) .' = '. $entity .'::create($array);
        $'. strtolower($entity) .'->save();
    }

}';

file_put_contents($dir . "/" . $filename, $data);
}


function model($entity)
{
    $filename = $entity . '.php';
    $dir = 'App/models';
    $data = '<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class ' . $entity . ' extends Model {

    public $timestamps = false;
}';

    file_put_contents($dir . "/" . $filename, $data);

}

function route($entity, $plural)
{
    $filename = "$plural.php";
    $dir = 'routes';
    $data ='<?php

$router->respond("GET", "/' . $plural .'", function () {
    $c = new App\\' . $entity  . 'Controller();
    return $c->index();
});

$router->respond("GET", "/' . $plural . '/[i:id]", function ($request) {
    $c = new App\\' . $entity  . 'Controller();
    return $c->show($request->id);
});

$router->respond("GET", "/' . $plural . '/create", function () {
    $c = new App\\' . $entity  . 'Controller();
    return $c->create();
});
$router->respond("POST", "/'. $plural .'", function () {
    $c = new App\AuthController();
    return $c->store($_POST);
});
';

    file_put_contents($dir . "/" . $filename, $data);
}

function table($plural,$fields)
{
    $dir = "migrations";
    $filename = date("Ymdhis")."_create_" . $plural . "_table.php";
    $columnData = "";
    foreach($fields as $field){
        $columnData = $columnData . '$table->addColumn("' . $field .'", "string", array("limit" => 40));
        ' ;
    }


    $data = '<?php

use Phinx\Migration\AbstractMigration;

class CreateUserTable extends AbstractMigration
{

    public function change()
    {
        $table = $this->table("'. $plural .'");

        ' . $columnData . '
        $table->create();
    }


    /**
     * Migrate Up.
     */
    public function up()
    {

    }

    /**
     * Migrate Down.
     */
    public function down()
    {

    }
}
';
    file_put_contents($dir . "/" . $filename, $data);
}

function autoload()
{
    shell_exec ( "composer dump-autoload");
}

